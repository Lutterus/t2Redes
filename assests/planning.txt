utilizando protocolo UDP;

- O programa deverá possuir dois tipos de pacotes: o token e os dados. Ao iniciar o programa, o usuário deverá informar o endereço IP da máquina que está a sua direita, um apelido e o tempo do token e dos dados.

- Descrição dos Pacotes
A implementação deve seguir fielmente o formato dos pacotes descrito a seguir, pois durante a
apresentação do trabalho, aplicações de grupos diferentes deverão se comunicarem. A correta
interação entre as diferentes implementações fazem parte da avaliação do trabalho.
Obs.: Definir estruturas de dados com 1024 bytes de tamanho


TOKEN (captura3)
- Em uma rede em anel, há o uso de tokens, que são pacotes especiais que circulam na rede e permitem a transmissão das mensagens na rede. Desta forma, a aplicação deverá implemantar o token que ficará circulando na rede.

- Os dados enviados deverão retornar à máquina origem e somente depois disso o token poderá ser enviado para a próxima estação.

IDENTIFICAÇÃO

- As máquinas da rede serão identificadas por apelidos e deve-se especificar o tempo que a estação permanecerá com os pacotes (para fins de depuração), em segundos. Tais informações devem ser inseridas na aplicação através de um arquivo de configuração. Além disso, apenas uma determinada máquina será responsável por gerar o token a primeira vez (esta máquina deve ter o valor true no arquivo de configuração, enquanto as outras terão o valor false).

exemplo do arquivo de configuração: captura1

- A máquina que gera o token deve enviá-lo para a máquina que está a sua direita no anel (IP configurado no arquivo de configuração). Caso a máquina que recebeu o token não tenha dados para transmitir (fila de mensagens vazia), o token será enviado para a próxima máquina do anel (máquina a direita - IP configurado no arquivo de configuração). Caso contrário, a primeira mensagem é retirada da fila e é enviada para a máquina a sua direita, ou seja, os dados também devem seguir a ordem do anel.

VALIDACAO


- Antes de enviar uma mensagem, o cálculo de controle de erro deverá ser inserido na mensagem pela máquina origem. Deve-se utilizar o CRC 16 como técnica de controle de erro. A aplicação deve implementar um módulo de inserção de falhas que force as máquinas a inserir erros aleatoriamente nas mensagens. Este módulo deve trabalhar com alguma probabilidade para inserir erro
nas mensagens.

MENSAGENS
- Deve ser implementada uma fila para armazenar as mensagens que serão enviados por cada máquina da rede, e somente um item (mensagem) pode ser transmitido por vez. - Complemento: Além disso, deverá ser implementada uma fila em cada máquina. Esta fila poderá estar vazia ou não. A fila poderá conter até 10 mensagens. Para cada mensagem adicionada, deve ser armazenado também o apelido da máquina destino.

Os serviços de envio de dados oferecidos devem contemplar duas formas de transmissão:
Unicast: envia o pacote para um único destino;
Broadcast: envia o pacote para todas as máquinas da rede usando o apelido TODOS.
Neste caso, o módulo de inserção de falhas deve manter o pacote em “nãocopiado”.




Pacote de dados (captura4)

- No destino
- Quando a máquina origem enviar um pacote de dados, um campo no cabeçalho do pacote deverá ser marcado como “nãocopiado”. Então, se esse pacote retornar para a máquina origem com uma das seguintes configurações: (captura2)

Ao receber um pacote de dados, a estação verifica se o mesmo é endereçado a ela, verificando o
apelido do destino. Caso não seja, este pacote deve ser enviado para seu vizinho da direita. Caso
o pacote seja para ela, a aplicação deve recalcular o CRC, imprimir o apelido da origem e a
mensagem, e deve também enviar o pacote de volta, alterando o campo naocopiado para ACK
ou erro.

- Na origem
Caso o pacote de dados seja recebida por quem a originou (o apelido de origem é igual ao seu),
será necessário verificar o controle de erro. Ao receber um pacote com este campo em
naocopiado ou ACK, um token deve ser enviado para seu vizinho da direita. Caso o pacote
venha com erro, o mesmo deve ser retransmitido apenas uma vez na rede, trocando o erro por
naocopiado, colocando a mensagem original sem erro e enviando a mensagem para a
máquina a sua direita na próxima passagem do token.

- Controle do Token
A máquina que gera o token a primeira vez também deve controlá-lo. Essa máquina irá verificar
se o token está passando por ela dentro de um determinado tempo. Dois problemas podem ser detectados por essa estação:
1. o token não passa dentro de um tempo estipulado (timeout): um novo token deverá ser gerado, pois o mesmo foi perdido por uma estação do anel. Para tanto, deverá haver uma opção de retirada do token do anel por uma das máquinas; OU
2. um token passa por ela em um tempo menor que o tempo mínimo: neste caso há mais de
um token circulando na rede e, portanto, o token deverá ser retirado da rede. Nesse caso,
deverá haver uma opção de geração de token, para que seja possível gerar tokens por
qualquer máquina quando a rede estiver em funcionamento

Deve ser possível:
● Especificar, a qualquer momento, uma mensagem a ser enviada por uma máquina;
● Visualizar onde o token e o pacote de dados se encontram durante a execução do programa;
● Avisar quando houver retransmissões;
● Saber o que está acontecendo;
● Saber de houve token perdido ou se há mais de um token circulando na rede.
